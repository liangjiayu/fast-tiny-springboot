name: Deploy to Server

on:
  workflow_dispatch:
    inputs:
      envTag:
        description: "选择部署环境"
        required: true
        default: "daily"
        type: choice
        options:
          - daily
          - prod

env:
  REGISTRY: docker.io
  IMAGE_NAME: fast-tiny-app
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ""
    outputs:
      IMAGE_TAG: ${{ steps.set-tag.outputs.IMAGE_TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate timestamp
        id: set-tag
        run: |
          TAG=$(date +%Y%m%d%H%M)
          echo "IMAGE_TAG=$TAG" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          push: true

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: IMAGE_NAME
          script: |
            cd /home/admin/fast-tiny-app

#            IMAGE_FULL_NAME="${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.build.outputs.IMAGE_TAG }}"
#
#            echo "IMAGE_FULL_NAME=$IMAGE_FULL_NAME" > .env
#            echo "IMAGE_NAME=$IMAGE_NAME" >> .env

            docker-compose down || true
            docker-compose pull
            docker-compose up -d
